{"version":3,"sources":["images/dumpling.png","images/ivaraDiscord.PNG","images/IvaraTheMerchantPlan.png","images/canadaLive.PNG","images/canadaLivePlan.png","serviceWorker.js","components/intro.js","components/navigation.js","components/navigationMobile.js","components/footerLinks.js","components/projectCard.js","components/projectList.js","components/readsCard.js","components/readsList.js","components/referenceCard.js","components/referenceList.js","App.js","components/siteTemplate.js","pages/ivaraTheMerchant.js","pages/canadaLive.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Intro","className","href","Component","Navigation","id","NavigationMobile","src","Logo","width","height","alt","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","FooterLinks","icon","faLinkedin","size","faExternalLinkAlt","faGithub","ProjectCard","this","props","languages","title","summary","faStar","likes","ProjectList","to","ReadsCard","eventName","place","date","topic","moreinfoLink","target","rel","websiteLink","ReadsList","ReferenceCard","faUser","name","profession","email","phone","ReferenceList","App","data-spy","data-offset","SiteTemplate","image","align","problem","map","lang","k","key","planImage","planSummary","gitLink","IvaraTheMerchant","IvaraImg","IvaraPlan","CanadaLive","canadaLive","canadaLivePlan","ReactDOM","render","basename","process","exact","path","component","IvaraTheMerchantPage","CanadaLivePage","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e3197af4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dumpling.78546ec2.png\";","module.exports = __webpack_public_path__ + \"static/media/ivaraDiscord.04de9916.PNG\";","module.exports = __webpack_public_path__ + \"static/media/IvaraTheMerchantPlan.2758851a.png\";","module.exports = __webpack_public_path__ + \"static/media/canadaLive.5af98ea3.PNG\";","module.exports = __webpack_public_path__ + \"static/media/canadaLivePlan.c96a9111.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from 'react'\r\nimport '../css/intro.css'\r\n\r\nclass Intro extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"introClass px-5 pt-5 pb-4\">\r\n                <p className=\"ac-intro-heading text-light ac-intro-name\">\r\n                    Hello, I'm Arjun Cosare\r\n                </p>\r\n                <p className=\"text-muted ac-intro-summary\">\r\n                    Fresh graduate in computer science at <a className=\"ac-link\" href=\"https://www.ucalgary.ca/\">University of Calgary</a>. Recently, I do a lot of front-end\r\n                    development, and got into react.js and a bit of bootstrap. I do brush up my back-end skills with node.js and C# from time to time. I can't shut up\r\n                    about test-driven development. Oh how easily we can catch those nasty bugs.\r\n                </p>\r\n            </div>\r\n        );  \r\n    }\r\n}\r\n\r\nexport default Intro;","import React, { Component } from 'react'\r\nimport '../css/navigation.css'\r\n\r\nclass Navigation extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"navigationClass py-lg-4 p-5\">\r\n                <nav className=\"nav d-flex flex-column\" id=\"ac-navigation\">\r\n                    <a className=\"nav-item  nav-link active ac-nav-item h7 d-inline-flex mb-3 pl-0\" href=\"#projectID\">\r\n                        01 <hr className=\"ac-w-15 ac-hr d-inline-flex mx-4\" /> PROJECTS\r\n                    </a>\r\n                    <a className=\"nav-item nav-link ac-nav-item h7 d-inline-flex mb-3 pl-0\" href=\"#coursesID\">\r\n                        02 <hr className=\"ac-w-10 ac-hr d-inline-flex mx-4\" /> COURSES&nbsp;&&nbsp;READS\r\n                    </a>\r\n                    <a className=\"nav-item nav-link ac-nav-item h7 d-inline-flex mb-3 pl-0\" href=\"#referenceID\">\r\n                        03 <hr className=\"ac-w-10 ac-hr d-inline-flex mx-4\" /> REFERENCES\r\n                    </a>\r\n                </nav>\r\n            </div>    \r\n        );\r\n    }\r\n}\r\n\r\nexport default Navigation;","import React, { Component } from 'react'\r\nimport Logo from '../images/dumpling.png'\r\nimport '../css/navigationMobile.css'\r\n\r\nclass NavigationMobile extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"navigationMobileClass sticky-top d-lg-none\">\r\n                <nav className=\"navbar navbar-expand-lg navbar-dark \">\r\n                    <span className=\"navbar-brand\" >\r\n                        <img src={Logo} width=\"30\" height=\"30\" alt=\"\" />\r\n                    </span>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                        data-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" aria-expanded=\"false\"\r\n                        aria-label=\"toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\r\n                        <div className=\"navbar-nav\">\r\n                            <a className=\"nav-item nav-link\" href=\"#projectID\">Projects</a>\r\n                            <a className=\"nav-item nav-link\" href=\"#coursesID\">Courses&nbsp;&&nbsp;Reads</a>\r\n                            <a className=\"nav-item nav-link\" href=\"#referenceID\">References</a>\r\n                        </div>\r\n                    </div>          \r\n                </nav>\r\n            </div>    \r\n        );\r\n    }\r\n} \r\n\r\nexport default NavigationMobile;","import React, { Component } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport { faLinkedin, faGithub } from '@fortawesome/free-brands-svg-icons'\r\nimport '../css/footerLinks.css'\r\n\r\nclass FooterLinks extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"footerLinksClass d-flex justify-content-start text-light py-lg-3 p-5\">\r\n                <a className=\"ac-link mr-5\" href=\"https://www.linkedin.com/in/arjun-cosare-350601154/\">        \r\n                    <span className=\"footer-font\"> Linked </span>\r\n                    <FontAwesomeIcon className=\"mr-3 ac-icon\" icon={faLinkedin} size=\"lg\" />\r\n                    <FontAwesomeIcon icon={faExternalLinkAlt} size=\"xs\" />\r\n                    \r\n                </a>\r\n                <a className=\"ac-link mr-5\" href=\"https://github.com/acosa188\">\r\n                    <FontAwesomeIcon className=\"mr-3 ac-icon\" icon={faGithub} size=\"lg\" /> \r\n                    <span className=\"footer-font mr-3\" > Github </span>\r\n                    <FontAwesomeIcon icon={faExternalLinkAlt} size=\"xs\" />\r\n                </a>\r\n            </div>    \r\n        );\r\n    }\r\n}\r\n\r\nexport default FooterLinks;","import React, { Component } from 'react'\r\nimport { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport '../css/projectCard.css'\r\n\r\nclass ProjectCard extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"projectCard ac-proj-card-bgcolor p-5 mb-2\">\r\n                <p className=\"ac-project-card-lang-font text-uppercase ac-orange-color\">{this.props.languages}</p>\r\n                <p className=\"ac-project-card-title-font text-light\">{this.props.title}</p>\r\n\r\n                <p className=\"ac-project-card-summary-font text-muted\">{this.props.summary}</p>\r\n                <FontAwesomeIcon className=\"text-muted\" icon={faStar} size=\"xs\" />\r\n                <span className=\"ac-project-card-lang-size text-muted\">&nbsp;{this.props.likes}</span>\r\n            </div>    \r\n        );\r\n    }\r\n}\r\n\r\nexport default ProjectCard;","import React, { Component } from 'react'\r\nimport ProjectCard from './projectCard'\r\nimport '../css/projectList.css'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass ProjectList extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"projectListClass nav mb-5\" id={this.props.id}>\r\n                <div className=\"ac-list-header mb-5 d-lg-none\">Projects</div>\r\n                <nav className=\"nav d-flex flex-column w-100\">\r\n                    <Link className=\"nav-item nav-link p-0\" to=\"/project/IvaraTheMerchant\" >\r\n                        <ProjectCard languages=\"Node.js, Javascript, discord.js\" title=\"ivara the merchant\" summary=\"A discord bot that lets user to query the warframe market place.\" likes=\"10\" />\r\n                    </Link>\r\n                    <Link className=\"nav-item nav-link p-0\" to=\"/project/HCAP\">\r\n                        <ProjectCard languages=\"java\" title=\"hcap\" summary=\"A history base capability system for IoT devices.\" likes=\"3,221\" />\r\n                    </Link>\r\n                    <Link className=\"nav-item nav-link p-0\" to=\"/project/CanadaLive\">\r\n                        <ProjectCard languages=\"sql server, node.js, react.js, leaflet.js, c#, redux.js, saga.js, css\" title=\"canadalive map\" summary=\"An interactive map that compares last year's tax returns and current year's tax return.\" likes=\"3,221\" />\r\n                    </Link>\r\n                    <Link className=\"nav-item nav-link p-0\" to=\"/project/EasyGrading\">\r\n                        <ProjectCard languages=\"mvc, razor, c#, mysql\" title=\"easy grading\" summary=\"An application that let students check and measure their needed grade on future projects and exams.\" likes=\"3,221\" />\r\n                    </Link>\r\n                           \r\n                </nav>\r\n                \r\n            </div>    \r\n        );\r\n    }\r\n}\r\n\r\nexport default ProjectList;","import React, { Component } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport '../css/readsCard.css'\r\n\r\nclass ReadsCard extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"card ac-card-bgcolor talkCardClass\">\r\n                <div className=\"card-body\">\r\n                    <div className=\"d-flex flex-column p-4 \">\r\n                        <div className=\"mb-5\">\r\n                            <p className=\"ac-talks-card-lang-font text-uppercase ac-orange-color mb-0\">\r\n                                {this.props.eventName}\r\n                            </p>\r\n                            <p className=\"mb-0\">\r\n                                <small className=\"ac-talks-card-lang-size text-muted\">\r\n                                    {this.props.place}\r\n                                </small>\r\n                            </p>\r\n                            <p>\r\n                                <small className=\"ac-talks-card-lang-size text-muted\">\r\n                                    {this.props.date}\r\n                                </small>\r\n                            </p>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"pt-5 mb-2 align-items-end\">\r\n                            <p className=\"ac-talks-card-topic-font font-weight-normal text-light\">\r\n                                {this.props.topic}\r\n                            </p>\r\n                            <div className=\"d-inline-block\">\r\n                                {this.props.moreinfoLink &&\r\n                                    <a className=\"ac-link mr-4\" href={this.props.moreinfoLink} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                        <small className=\"font-weight-bold\">\r\n                                            MoreInfo &nbsp;\r\n                                        </small>\r\n                                        <FontAwesomeIcon icon={faExternalLinkAlt} size=\"xs\" />\r\n                                    </a>\r\n                                }\r\n\r\n                                {this.props.websiteLink &&\r\n                                    <a className=\"ac-link\" href={this.props.websiteLink} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                        <small className=\"font-weight-bold\">\r\n                                            Website &nbsp;\r\n                                        </small>\r\n                                        <FontAwesomeIcon icon={faExternalLinkAlt} size=\"xs\" />\r\n                                    </a>\r\n                                }\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n              \r\n            </div>    \r\n        );\r\n    }\r\n}\r\n\r\nexport default ReadsCard;","import React, { Component } from 'react'\r\nimport ReadsCard from './readsCard'\r\nimport '../css/readsList.css'\r\n\r\nclass ReadsList extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"talkListClass mb-5\" id={this.props.id}>\r\n                <div className=\"ac-list-header mb-5 d-lg-none\">Courses and Reads</div>\r\n                <div className=\"card-columns\">\r\n                    <ReadsCard eventName=\"Ehud Sharlin\" place=\"University of Calgary\" date=\"Fall 2017\" topic=\"Human Computer Interaction\" moreinfoLink=\"http://contacts.ucalgary.ca/info/cpsc/profiles/102-3264\" websiteLink=\"http://www.cpsc.ucalgary.ca/~ehud\"/>\r\n                    <ReadsCard eventName=\"Carey Williamson\" place=\"University of Calgary\" date=\"Fall 2017\" topic=\"Systems Modelling & Simulation\" moreinfoLink=\"https://pages.cpsc.ucalgary.ca/~carey/\" />\r\n                    <ReadsCard eventName=\"Nelson Wong\" place=\"University of Calgary\" date=\"Winter 2017\" topic=\"Database Management Systems\" moreinfoLink=\"http://contacts.ucalgary.ca/info/cpsc/profiles/102-2540\" />\r\n                    <ReadsCard eventName=\"Ken Barker\" place=\"University of Calgary\" date=\"Fall 2019\" topic=\"Design and Implementation Database System\" moreinfoLink=\"https://www.ucalgary.ca/kbarker/\" />\r\n                    <ReadsCard eventName=\"Sasha Ivanov\" place=\"University of Calgary\" date=\"Fall 2019\" topic=\"iProgramming Creative Minds\" moreinfoLink=\"https://www.linkedin.com/in/madebysasha/?originalSubdomain=ca\" />\r\n                    <ReadsCard eventName=\"Steve Krug\" place=\"Book\" date=\"Revisited\" topic=\"Don't Make Me Think, Revisited: A Common Sense Approach to Web Usability\" />\r\n                </div>\r\n            </div>    \r\n        );\r\n    }\r\n}\r\n\r\nexport default ReadsList;","import React, { Component } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUser } from '@fortawesome/free-solid-svg-icons'\r\nimport '../css/referenceCard.css'\r\n\r\nclass ReferenceCard extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"refrenceCardClass row my-5\">\r\n                <div className=\"rounded-circle ac-card-bgcolor ac-circle d-flex justify-content-center\">\r\n                    <FontAwesomeIcon className=\"align-self-center text-light ac-person-icon\" icon={faUser} />\r\n                </div>\r\n                <div className=\"col-12 col-md-6 py-2 px-md-5\">\r\n                    <p className=\"ac-reference-name text-light\">{this.props.name}</p>\r\n                    <p className=\"h7 font-weight-normal text-muted\">{this.props.profession}</p>\r\n                    <div className=\"d-inline-block\">\r\n                        <small className=\"ac-orange-color mr-5\">\r\n                            E: {this.props.email}\r\n                        </small>\r\n                        {\r\n                            this.props.phone ? \r\n                                <small className=\"ac-orange-color\">\r\n                                    P: {this.props.phone}\r\n                                </small> : <div></div>\r\n                        }\r\n                        \r\n                    </div>\r\n                </div>\r\n                \r\n            </div>    \r\n        );\r\n    }\r\n}\r\n\r\nexport default ReferenceCard;","import React, { Component } from 'react'\r\nimport ReferenceCard from './referenceCard'\r\nimport '../css/referenceList.css'\r\n\r\nclass ReferenceList extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"referenceListClass\" id={this.props.id}>\r\n                <div className=\"ac-list-header mb-5 d-lg-none\">References</div>\r\n                <div className=\"flex-column\">\r\n                    <ReferenceCard name=\"Michelle Thomas\" profession=\"H&R Block Software Developer Manager\" email=\"mthomas@compiledit.com\"/>\r\n                    <ReferenceCard name=\"Joe Salazar\" profession=\"Junior Software Developer\" email=\"joe.m.slzr@gmail.com\" />\r\n                    <ReferenceCard name=\"Mimi Tan\" profession=\"Bextle Company Founder\" email=\"bextlemimi@gmail.com\" phone=\"403-861-1588\" />\r\n                </div>\r\n            </div>    \r\n        );\r\n    }\r\n}\r\n\r\nexport default ReferenceList;","import React from 'react';\r\nimport Intro from './components/intro'\r\nimport Navigation from './components/navigation'\r\nimport NavigationMobile from './components/navigationMobile'\r\nimport FooterLinks from './components/footerLinks'\r\nimport ProjectList from './components/projectList'\r\nimport ReadsList from './components/readsList'\r\nimport ReferenceList from './components/referenceList'\r\n\r\n\r\nfunction App() {\r\n  return (\r\n      <div className=\"App\">\r\n          <NavigationMobile/>\r\n          <div className=\"row no-gutters\">\r\n              <div className=\"col-12 col-lg-4 \">\r\n                  <div className=\"ac-intro-wrapper\">\r\n                      <Intro />\r\n                      <div className=\"d-none d-lg-block\">\r\n                          <Navigation />  \r\n                      </div>\r\n                      <FooterLinks />\r\n                  </div>\r\n                  \r\n              </div>\r\n              <div className=\"col-12 col-lg-8 \">\r\n                  <div className=\"ac-content-wrapper p-5 px-lg-3\" data-spy=\"scroll\" data-target=\"#ac-navigation\" data-offset=\"80\">\r\n                      <ProjectList id=\"projectID\" />\r\n                      <ReadsList id=\"coursesID\" />\r\n                      <ReferenceList id=\"referenceID\"/>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React, { Component } from 'react'\r\nimport '../css/siteTemplate.css'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass SiteTemplate extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"siteTemplateClass\">\r\n                <div className=\"container my-5\">\r\n                    <div className=\"row px-5\">\r\n                        <div className=\"imgClass col-lg-6\">\r\n                            <img className=\"img-fluid\" src={this.props.image} alt=\"\" />\r\n                        </div>\r\n                        <div className=\"summaryClass col-lg-6 p-lg-5 mb-5 mb-lg-0\">\r\n                            <p className=\"display-3 text-light\">{this.props.title}</p>\r\n                            <small className=\"text-muted font-weight-bold\">{this.props.date}</small>\r\n                            <p className=\"ac-summary text-light mt-4\">{this.props.summary}</p>\r\n                        </div>\r\n                        <div className=\"problemClass mb-5 px-lg-0 col-12\">\r\n                            <div className=\"d-inline-flex\">\r\n                                <span className=\"h5 ac-heading mr-2\">Problem</span>\r\n                                <hr className=\"ac-hr-design-lighter\" align=\"left\"></hr>\r\n                            </div>\r\n                            <p className=\"ac-summary text-light\">{this.props.problem}</p>\r\n                        </div>  \r\n                       \r\n                        <div className=\"techClass mb-5 px-lg-0 col-12\">\r\n                            <div className=\"d-inline-flex\">\r\n                                <span className=\"h5 ac-heading mr-2\">Technologies</span>\r\n                                <hr className=\"ac-hr-design-lighter\" align=\"left\"></hr>\r\n                            </div>\r\n                            <ul className=\"mt-4 text-light\">\r\n                                {\r\n                                    this.props.languages.map((lang, k) => {\r\n                                        return (\r\n                                            <li className=\"ac-list-item mb-3\" key={k}>{lang}</li>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </ul>\r\n                        </div>\r\n\r\n                        <div className=\"planClass mb-5 px-lg-0 col-12\">\r\n                            <div className=\"d-inline-flex mb-3\">\r\n                                <span className=\"h5 ac-heading mr-2\">Planning Stage</span>\r\n                                <hr className=\"ac-hr-design-lighter\" align=\"left\"></hr>\r\n                            </div>\r\n                            <div>\r\n                                <img className=\"img-fluid\" src={this.props.planImage} alt=\"\" />\r\n                            </div>\r\n                            <p className=\"text-light mt-3\">{this.props.planSummary}</p>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"codeClass mb-5 px-lg-0 col-12\">\r\n                            <div className=\"d-inline-flex\">\r\n                                <span className=\"h5 ac-heading mr-2\">Code</span>\r\n                                <hr className=\"ac-hr-design-lighter\" align=\"left\"></hr>\r\n                            </div>\r\n                            <p className=\"h6 text-light\">Github</p>\r\n                            <p className=\"text-muted\">\r\n                                Github repository:&nbsp;\r\n                                {\r\n                                    this.props.gitLink ? \r\n                                        <a className=\"ac-link\" href={this.props.gitLink} target=\"_blank\" rel=\"noopener noreferrer\">{this.props.gitLink}</a> :\r\n                                        <span className=\"text-light\">No github repository because of propriety reasons.</span>\r\n                                }\r\n                            \r\n                            </p>\r\n                        </div>\r\n\r\n                        <div className=\"col-12\">\r\n                            <div className=\"d-flex justify-content-center\">\r\n                                <Link className=\"h5 ac-link\" to=\"/\">\r\n                                    &lt; Back\r\n                                </Link>\r\n                            </div>  \r\n\r\n                        </div>\r\n                       \r\n                    </div>\r\n\r\n                    \r\n                </div>\r\n            </div>    \r\n        );\r\n    }\r\n}\r\n\r\nexport default SiteTemplate;","import React, { Component } from 'react'\r\nimport SiteTemplate from '../components/siteTemplate'\r\nimport IvaraImg from '../images/ivaraDiscord.PNG'\r\nimport IvaraPlan from '../images/IvaraTheMerchantPlan.png'\r\n\r\nclass IvaraTheMerchant extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"ivaraTheMerchantClass\">\r\n                <SiteTemplate\r\n                    image={IvaraImg}\r\n                    title=\"Ivara The Merchant\"\r\n                    date=\"June 13, 2019\"\r\n                    summary=\"Ivara the merchant is a discord bot that takes advantage of warframe market open api,\r\n                            to query the cheapest items in game, buy it and create profit.\"\r\n                    problem=\"Most multiplayer online games, in game money plays a big role on how strong the character\r\n                    can be. Players can use in game money to buy other player's services like crafting gears or\r\n                    simply purchasing the materials needed for crafting. The problem is, how to make in game money fast?\r\n                    The game provided a public api for the game's market. It lets users query the market place and gives\r\n                    information about the sellers and buyers. It even lets its user query the normal prices for each items.\"\r\n                    languages={[\"node.js\", \"javascript\", \"discord.js\"]}\r\n                    gitLink=\"https://github.com/acosa188/IvaraTheMerchant\"\r\n                    planImage={IvaraPlan}\r\n                    planSummary=\"The plan is to create a bot that takes advantage of this public api to query those items that are cheaper than the \r\n                    original price. The bot then grabs the buyer's information for the user to chat them in-game and purchase those items. Simple yet\r\n                    effective. The main problem I see is that chatting with those buyers takes time and effort for the users. In the future features, I\r\n                    would like to add an automagic way to let the bot chat the buyers and just notify the users if the transactions are ready.\"\r\n                />\r\n            </div>    \r\n        );\r\n    }\r\n}\r\n\r\nexport default IvaraTheMerchant;","import React, { Component } from 'react'\r\nimport SiteTemplate from '../components/siteTemplate'\r\nimport canadaLive from '../images/canadaLive.PNG'\r\nimport canadaLivePlan from '../images/canadaLivePlan.png'\r\n\r\nclass CanadaLive extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"canadaLiveClass\">\r\n                <SiteTemplate\r\n                    image={canadaLive}\r\n                    title=\"Canada Live\"\r\n                    date=\"January 10, 2019\"\r\n                    summary=\"Canadalive is an interactive map application that displays the number of tax return completed in the current year and \r\n                    compared to last year's tax return. The information can be drilled down to region, district and locations. The application\r\n                    displays green if the qouta is met and red or yellow if it still not met the qouta.\"\r\n                    problem=\"Companies want an application that tracks their progress over the year. The problem is that the current application\r\n                    is outdated that users needs to refresh the page to update the details. The previous application also only have\r\n                    the region details.\"\r\n                    languages={[\"sql server\", \"node.js\", \"react.js\",\"leaflet.js\",\"redux.js\",\"saga.js\",\"css\"]}\r\n                    planImage={canadaLivePlan}\r\n                    planSummary=\"The plan is to create a single page application that automagically updates every x minutes. Not only that, the application\r\n                    also needs to utilize the district and office location details and create an interactive map. Fortunately, there is a free\r\n                    interactive map javascript library called leaflet. The only work that I need is to create a back-end that retrieves region,\r\n                    district and office details for the leaflet map to use. Lastly to wrap things up, I used bootstrap make things pretty and responsive\r\n                    to all devices.\"\r\n                />\r\n            </div>    \r\n        );\r\n    }\r\n}\r\n\r\nexport default CanadaLive;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from './App';\r\nimport IvaraTheMerchantPage from './pages/ivaraTheMerchant';\r\nimport CanadaLivePage from './pages/canadaLive';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <div>\r\n            <Route exact path=\"/\"  component={App} />\r\n            <Route exact path=\"/project/IvaraTheMerchant\"  component={IvaraTheMerchantPage} />\r\n            <Route exact path=\"/project/CanadaLive\" component={CanadaLivePage} />\r\n        </div>\r\n    </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}